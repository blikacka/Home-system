# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
@reboot sudo -u root owfs
@reboot sudo -u root python /var/www/html/turnOffAll.py
#@reboot sudo -u root screen -d -m watch -n 5 sh /root/teplotyN.sh
*/1 * * * * curl --request GET 'http://10.10.10.148:1019/Home-system/www/temperature/read-and-save-temp-from-system?cronHash=cb7ddd82ced9a4e1afd7abcf13cd8b862475bf55cc8feba0bf95d1fc03bdc536' >/dev/null 2>&1
#*/1 * * * * curl --request GET 'http://10.10.10.148:1019/Home-system/www/temperature/save-temp-from-file?cronHash=cb7ddd82ced9a4e1afd7abcf13cd8b862475bf55cc8feba0bf95d1fc03bdc536' >/dev/null 2>&1
*/1 * * * * sh /root/procesor_temp.sh > /dev/null 2>&1
